<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Code

//Instance Variables
GameMaster_obj.Player3Active = 0; 
timer = 0; 
alpha = 1;
disabled = false;

//AI Variables
global.player3_ai = false;

//Key Variables
index = 2;
key1 = ds_list_find_value(global.keybindings, index).jump_key1_keyboard;
key2 = ds_list_find_value(global.keybindings, index).jump_key1_gamepad;
key3 = ds_list_find_value(global.keybindings, index).jump_key2_keyboard;
key4 = ds_list_find_value(global.keybindings, index).jump_key2_gamepad;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Input

//Check if disabled and ai.
if (disabled and global.player3_ai)
{
    if (input_check_pressed(index, ord("3")))
    {
        //Updates ai fighter.
        with (Player3_obj)
        {
            //Updates fighter for player.
            self.fighter_index += 1;
            if (self.fighter_index &gt; ds_list_size(obj_fighter_container.list) - 1)
            {
                self.fighter_index = 0;
            }
            self.fighter = ds_list_find_value(obj_fighter_container.list, self.fighter_index);
            event_user(0);
            
            //Updates game master.
            with (GameMaster_obj)
            {
               Player3Red = other.fighter.red;
               Player3Green = other.fighter.green;
               Player3Blue = other.fighter.blue;
               Player3Fighter = other.fighter;
            }
            
            //Plays popup animation for name.
            var name = self.fighter.name;
            animation_text_popup(-100, 1, 0.02, fnt_joystix_8, fa_center,
            fa_top, x, y, name, 16, 100, room_seconds(2), 30, 90, c_white, c_white);
        }
    }
}

//Check if disabled.
if (disabled) exit;

//Check for Join input.
if (input_check_pressed(index, key1, key2, key3, key4)) 
{
     instance_create(Player3Spawn_obj.x,Player3Spawn_obj.y,Player3_obj);
     with (Player3_obj)
     {
        self.fighter_index = irandom_range(0, ds_list_size(obj_fighter_container.list) - 1);
        self.fighter = ds_list_find_value(obj_fighter_container.list, self.fighter_index);
        event_user(0);
        with (GameMaster_obj)
        {
           Player3Red = other.fighter.red;
           Player3Green = other.fighter.green;
           Player3Blue = other.fighter.blue;
           Player3Fighter = other.fighter;
           Player3Active = 1;
           Player3Ready = 0;
        }
     }
     instance_create(165,224,Player3ReadyTexts); 
     instance_create(PressXtoPlayer3_obj.x,PressXtoPlayer3_obj.y-32,Ready3Up_obj); 
     instance_create(PressXtoPlayer3_obj.x,PressXtoPlayer2_obj.y+32,Recolor3_obj);
     instance_destroy();
     audio_play_sound_volume(sfx_rgb_up, 10, false, global.sfxvolume);
}

//Check for AI input.
if (input_check_pressed(index, ord("3")))
{
    //Disable
    disabled = true;
    audio_play_sound_volume(sfx_rgb_up, 10, false, global.sfxvolume);
    global.player3_ai = true;
    var fighter_index = irandom_range(0, ds_list_size(obj_fighter_container.list) - 1);
    var fighter = ds_list_find_value(obj_fighter_container.list, fighter_index);
    with (GameMaster_obj)
    {
       Player3Red = fighter.red;
       Player3Green = fighter.green;
       Player3Blue = fighter.blue;
       Player3Fighter = fighter;
    }
    var ai = instance_create(Player3Spawn_obj.x, Player3Spawn_obj.y, Player3_obj);
    with (ai)
    {
        self.fighter_index = fighter_index;
        self.fighter = fighter;
        event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Drawing

//Setup Drawing
draw_set_alpha(alpha); 
draw_set_color(c_white); 
draw_set_font(fnt_joystix_8); 
draw_set_halign(fa_middle); 

//Check if disabled.
if (disabled)
{
    //Draws AI Text
    draw_text(x,y-15,"AI Player 3#Press 3 to Update"); 
}
else
{
    //Draws Default Text
    draw_text(x,y-15,"Press Jump to Join#Press 3 to add AI"); 
}

//Resets Alpha
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
