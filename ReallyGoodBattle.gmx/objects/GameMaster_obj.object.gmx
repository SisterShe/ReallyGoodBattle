<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Code

//Player 1
Player1Score = 0;
Player1Ready = 0; 
Player1Active = 0;
Player1Red = 255;
Player1Green = 100;
Player1Blue = 255;
Player1Respawn = true;
Player1Fighter = 0;

//Player 2
Player2Score = 0;
Player2Ready = 0; 
Player2Active = 0;
Player2Red = 255;
Player2Green = 100;
Player2Blue = 50;
Player2Respawn = true;
Player2Fighter = 0;

//Player 3
Player3Score = 0;
Player3Ready = 0; 
Player3Active = 0;
Player3Red = 50;
Player3Green = 255;
Player3Blue = 255;
Player3Respawn = true;
Player3Fighter = 0;

//Player 4
Player4Score = 0;
Player4Ready = 0; 
Player4Active = 0;
Player4Red = 255;
Player4Green = 255;
Player4Blue = 50;
Player4Respawn = true;
Player4Fighter = 0;

//Instance Variables
ActivePlayers = 0;
ReadyPlayers = 0; 
RespawnTimer = room_seconds(1);
pause_room = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Respawn Player 4

//Check for gamemode.
if (global.gamemode = "Player Lives")
{
    //Check if player is alive.
    if (ds_list_find_value(obj_score_controller.scores, 3) &gt; 0)
    {
        var player = instance_create(Player4Spawn_obj.x,Player4Spawn_obj.y,Player4_obj);
        Player4Respawn = true;
        with (player)
        {
            fighter_index = ds_list_find_index(obj_fighter_container.list, other.Player4Fighter);
            fighter = other.Player4Fighter;
            event_user(0);
        }
    }
}
else
{
    var player = instance_create(Player4Spawn_obj.x,Player4Spawn_obj.y,Player4_obj);
    Player4Respawn = true;
    with (player)
    {
        fighter_index = ds_list_find_index(obj_fighter_container.list, other.Player4Fighter);
        fighter = other.Player4Fighter;
        event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Respawn Player 3

//Check for gamemode.
if (global.gamemode = "Player Lives")
{
    //Check if player is alive.
    if (ds_list_find_value(obj_score_controller.scores, 2) &gt; 0)
    {
        var player = instance_create(Player3Spawn_obj.x,Player3Spawn_obj.y,Player3_obj);
        Player3Respawn = true;
        with (player)
        {
            fighter_index = ds_list_find_index(obj_fighter_container.list, other.Player3Fighter);
            fighter = other.Player3Fighter;
            event_user(0);
        }
    }
}
else
{
    var player = instance_create(Player3Spawn_obj.x,Player3Spawn_obj.y,Player3_obj);
    Player3Respawn = true;
    with (player)
        {
            fighter_index = ds_list_find_index(obj_fighter_container.list, other.Player3Fighter);
            fighter = other.Player3Fighter;
            event_user(0);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Respawn Player 2

//Check for gamemode.
if (global.gamemode = "Player Lives")
{
    //Check if player is alive.
    if (ds_list_find_value(obj_score_controller.scores, 1) &gt; 0)
    {
        var player = instance_create(Player2Spawn_obj.x,Player2Spawn_obj.y,Player2_obj);
        Player2Respawn = true;
        with (player)
        {
            fighter_index = ds_list_find_index(obj_fighter_container.list, other.Player2Fighter);
            fighter = other.Player2Fighter;
            event_user(0);
        }
    }
}
else
{
    var player = instance_create(Player2Spawn_obj.x,Player2Spawn_obj.y,Player2_obj);
    Player2Respawn = true;
    with (player)
        {
            fighter_index = ds_list_find_index(obj_fighter_container.list, other.Player2Fighter);
            fighter = other.Player2Fighter;
            event_user(0);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Respawn Player 1

//Check for gamemode.
if (global.gamemode = "Player Lives")
{
    //Check if player is alive.
    if (ds_list_find_value(obj_score_controller.scores, 0) &gt; 0)
    {
        var player = instance_create(Player1Spawn_obj.x,Player1Spawn_obj.y,Player1_obj);
        Player1Respawn = true;
        with (player)
        {
            fighter_index = ds_list_find_index(obj_fighter_container.list, other.Player1Fighter);
            fighter = other.Player1Fighter;
            event_user(0);
        }
    }
}
else
{
    var player = instance_create(Player1Spawn_obj.x,Player1Spawn_obj.y,Player1_obj);
    Player1Respawn = true;
    with (player)
    {
        fighter_index = ds_list_find_index(obj_fighter_container.list, other.Player1Fighter);
        fighter = other.Player1Fighter;
        event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Exits if pause room.
if (room = rm_pause) exit;

//Check if game setup room.
if (room = rm_gamesetup)
{
    //Creates player object.
    if (!instance_exists(Player1_obj) and Player1Ready) 
    {
        instance_create(Player1Spawn_obj.x,Player1Spawn_obj.y,Player1_obj);
    }
    
    //Creates player object.
    if (!instance_exists(Player2_obj) and Player2Ready) 
    {
        instance_create(Player2Spawn_obj.x,Player2Spawn_obj.y,Player2_obj);
    }
    
    //Creates player object.
    if (!instance_exists(Player3_obj) and Player3Ready) 
    {
        instance_create(Player3Spawn_obj.x,Player3Spawn_obj.y,Player3_obj);
    }
    
    //Creates player object.
    if (!instance_exists(Player4_obj) and Player4Ready) 
    {
        instance_create(Player4Spawn_obj.x,Player4Spawn_obj.y,Player4_obj);
    }
}
else
{
    //Check if player should respawn.
    if (!instance_exists(Player1_obj) and Player1Respawn)
    {
        //Check if AI.
        if (global.player1_ai)
        {
            alarm[0] = RespawnTimer;
            Player1Respawn = false;
        }
        else if (Player1Active)
        {
            alarm[0] = RespawnTimer;
            Player1Respawn = false;
        }
    }
    
    //Check if player should respawn.
    if (!instance_exists(Player2_obj) and Player2Respawn)
    {
        //Check if AI.
        if (global.player2_ai)
        {
            alarm[1] = RespawnTimer;
            Player2Respawn = false;
        }
        else if (Player2Active)
        {
            alarm[1] = RespawnTimer;
            Player2Respawn = false;
        }
    }
    
    //Check if player should respawn.
    if (!instance_exists(Player3_obj) and Player3Respawn)
    {
        //Check if AI.
        if (global.player3_ai)
        {
            alarm[2] = RespawnTimer;
            Player3Respawn = false;
        }
        else if (Player3Active)
        {
            alarm[2] = RespawnTimer;
            Player3Respawn = false;
        }
    }
    
    //Check if player should respawn.
    if (!instance_exists(Player4_obj) and Player4Respawn)
    {
        //Check if AI.
        if (global.player4_ai)
        {
            alarm[3] = RespawnTimer;
            Player4Respawn = false;
        }
        else if (Player4Active)
        {
            alarm[3] = RespawnTimer;
            Player4Respawn = false;
        }
    }
}

//Check if all players are ready.
ActivePlayers = (Player1Active + Player2Active + Player3Active + Player4Active);
ReadyPlayers = (Player1Ready + Player2Ready + Player3Ready + Player4Ready); 
if (room = rm_gamesetup and ActivePlayers = ReadyPlayers and ActivePlayers &gt; 0) 
{    
    //Changes to game room.
    room_goto(choose(rm_level1, rm_level2, rm_level3, rm_level4,rm_level5,rm_level6));
    
    //Creates game controllers.
    instance_create(x, y, obj_score_controller);
    instance_create(x, y, obj_pause_controller);
}

//Check for exit of game setup.
if (room = rm_gamesetup and input_check_pressed(0, gp_start, gp_select, vk_escape))
{
    room_goto(rm_mainmenu);
    audio_play_sound_volume(sfx_exit, 10, false, global.sfxvolume);
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles action on new room.
if (room = rm_mainmenu)
{
    //Stops alarms and suicides.
    alarm[0] = -1;
    alarm[1] = -1;
    alarm[2] = -1;
    alarm[3] = -1;
    instance_destroy();
}
else if (room != rm_gamesetup and room != rm_pause and !pause_room)
{
    //Initial Player Spawn.
    if (Player1Active) alarm[0] = 1;
    if (Player2Active) alarm[1] = 1;
    if (Player3Active) alarm[2] = 1;
    if (Player4Active) alarm[3] = 1;
    
    //Initial AI Player Spawn.
    if (global.player1_ai) alarm[0] = 1;
    if (global.player2_ai) alarm[1] = 1;
    if (global.player3_ai) alarm[2] = 1;
    if (global.player4_ai) alarm[3] = 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
