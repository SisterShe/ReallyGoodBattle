<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_textfield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_widget_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Code

//Parent Inheritance
event_inherited();

//Data Variables
script = noone;
font = noone;
color1 = noone;
color2 = noone;
text = "";
limit = noone;
key = noone;

//Instance Variables
highlight = false;
canWrite = false;
cursor = "";
input = "";
blink_time = room_speed * 0.5;
cursor_width = 3;
steps = room_speed * 0.5;
color = noone;
value = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cursor Blink Effect

//Updates cursor.
if (cursor = "|")
{
    cursor = "";
}
else
{
    cursor = "|";
}

//Restarts alarm.
alarm[0] = blink_time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Text Input.

//Parent Inheritance
event_inherited();

//Checks if disabled or hidden.
if (disabled or hidden) exit;

//Checks if parent is disabled or hidden.
if (view.disabled or view.hidden) exit;

//Checks if mouse enabled.
if (mouse_enabled)
{
    //Handles Default Highlighting
    if (position_meeting(mouse_x, mouse_y, self))
    {
        highlight = true;
    }
    else
    {
        highlight = false;
    }
}
else
{
    //Handles Selected Highlighting
    if (selected)
    {
        highlight = true;
    }
    else
    {
        highlight = false;
    }
}

//If the mouse is under the textbox
if (position_meeting(mouse_x, mouse_y, self))
{
    //Textbox Selected
    if (mouse_check_button_pressed(mb_left))
    {
        //Updates variables
        canWrite = true;
        keyboard_string = "";
        cursor = "|";
        color = color2;
        
        //Starts alarm for cursor blinking.
        alarm[0] = blink_time;
    }
}
else
{
    //Textbox Unselected
    if (mouse_check_button_pressed(mb_left))
    {
        //Updates variables
        canWrite = false;
        cursor = "";
        
        //Stops alarm.
        alarm[0] = -1;
    }
}

//Check if checkbox is selected.
if (canWrite)
{    
    //Limits text to text limit..
    if (string_length(keyboard_string) &gt; limit)
    {
        keyboard_string = string_copy(keyboard_string, 1, limit);   
    }
    
    //Sets input to string.
    input = string_copy(keyboard_string, 1, limit);   
}

//Calculates highlight color.
value = animation_tween_step(id, highlight, tween_quintic_out, value, steps, 0, 1);
color = merge_color(color1, color2, value);

//Check if input is active.
if (script != noone and key != noone)
{
    //Checks if input can be made.
    if ((canWrite))
    {
        //Handles Input Interaction
        if (input_check_pressed(0, key))
        {
            script_execute(script);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Drawing

//Checks if hidden.
if (hidden) exit;

//Checks if parent is hidden.
if (view.hidden) exit;

//Setup Drawing
draw_self();
draw_set_colour(color);
draw_set_font(font);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

//Check if selected.
if (canWrite)
{
    //Sets drawing colour.
    draw_set_colour(color2);
}

//Check if selected.
if (canWrite or input != "")
{    
    //Draws Input Text
    draw_text(x, y, input);
    var length = cursor_width + string_width(input) / 2;
    draw_text(x + length, y, cursor);
}
else
{
    //Draws Default Text
    draw_text(x, y, text);    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
