<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_widget_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Code

//Parent Inheritance
event_inherited();

//Data Variables
font = noone;
halign = noone;
valign = noone;
color1 = noone;
outline = noone;
color2 = noone;
thickness = noone;
text = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Drawing

//Checks if hidden.
if (hidden) exit;

//Checks if parent is hidden.
if (view.hidden) exit;

//Determines Drawing Type
if (!outline)
{
    //Setup Drawing
    draw_set_colour(color1);
    draw_set_font(font);
    draw_set_halign(halign);
    draw_set_valign(valign);
    
    //Draws Text
    draw_text(x, y, text);
}
else
{
    //Setup Drawing
    draw_set_font(font);
    draw_set_halign(halign);
    draw_set_valign(valign);
    
    //Draws Outlined Text
    draw_set_color(color2)
    draw_text(x + thickness, y + thickness, text)
    draw_text(x - thickness, y - thickness, text)
    draw_text(x, y + thickness, text)
    draw_text(x + thickness, y, text)
    draw_text(x, y - thickness, text)
    draw_text(x - thickness, y, text)
    draw_text(x - thickness, y + thickness, text)
    draw_text(x + thickness, y - thickness, text)
    
    //Draws Normal Text
    draw_set_color(color1)
    draw_text(x,y,text)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
