<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_widget_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Code

//Parent Inheritance
event_inherited();

//Built-In Variables
image_speed = 0;

//Data Variables
script = noone;
font = noone;
color1 = noone;
color2 = noone;
text = "";
steps = noone;

//Instance Variables
color = noone;
highlight = false;
value = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Highlight and Press

//Parent Inheritance
event_inherited();

//Checks if disabled or hidden.
if (disabled or hidden) exit;

//Checks if parent is disabled or hidden.
if (view.disabled or view.hidden) exit;

//Checks if mouse enabled.
if (mouse_enabled)
{
    //Handles Default Highlighting
    if (position_meeting(mouse_x, mouse_y, self))
    {
        highlight = true;
    }
    else
    {
        highlight = false;
    }
}
else
{
    //Handles Selected Highlighting
    if (selected)
    {
        highlight = true;
    }
    else
    {
        highlight = false;
    }
}

//Highlight sprite.
if (highlight)
{
    image_index = 1;
}
else
{
    image_index = 0;
}

//Chheck if input can be made.
if (mouse_enabled and highlight_boolean())
{
    //Handles Input Interaction
    if (input_check_pressed(0, mb_left))
    {
        script_execute(script);
    }
}

//Checks if input can be made.
if ((selected and !mouse_enabled))
{
    //Handles Input Interaction
    if (input_check_pressed(0, gp_face1, vk_enter, ord("E")))
    {
        script_execute(script);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Drawing

//Checks if hidden.
if (hidden) exit;

//Checks if parent is hidden.
if (view.hidden) exit;

//Setup Drawing
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
