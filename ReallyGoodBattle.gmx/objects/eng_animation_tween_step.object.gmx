<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Code

//Data Variables
boolean = noone;
tween = noone;
duration = noone;
lower = noone;
upper = noone;

//The Return Value
value = noone;

//Instance Variables
done = true;
previous = noone;
interupt = false;

//Interuption Variables
interupt_duration = noone;
interupt_lower = noone;
interupt_upper = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check if parent is still alive.
if (!instance_exists(obj))
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delayed Creation Code

//Determines inital step value.
if (boolean)
{
    step = 0;
}
else
{
    step = duration;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Tweening

//Checks for change.
if (boolean)
{    
    //Checks for interuption
    if (previous = "false" and !done)
    {
        //Updates interupt values.
        interupt = true;
        interupt_duration = duration;
        interupt_lower = value;
        interupt_upper = upper;
        step = 0;
    }
    else if (previous = "false")
    {
        step = 0;
    }
}
else
{
    //Checks for interuption
    if (previous = "true" and !done)
    {
        //Updates interupt values.
        interupt = true;
        interupt_duration = duration;
        interupt_lower = lower;
        interupt_upper = value;
        step = 0;
    }
    else if (previous = "true")
    {
        step = 0;
    }
}

//Checks for boolean.
if (boolean)
{    
    //Updates variables.
    done = false;
    previous = "true";
    step++;
    
    //Checks for interuption
    if (!interupt)
    {
        //Normal tweening.
        value = script_execute(tween, step, duration, lower, upper);
        
        //Check if complete.
        if (step &gt; duration)
        {
            step = duration;
            interupt = false;
            done = true;
        }
    }
    else
    {
        //Interupt tweening.
        value = script_execute(tween, step, interupt_duration, interupt_lower, interupt_upper);
        
        //Check if complete.
        if (step &gt; interupt_duration)
        {
            step = duration;
            interupt = false;
            done = true;
        }
    }
}
else
{    
    //Updates variables.
    done = false;
    previous = "false";
    step++;
    
    //Checks for interuption
    if (!interupt)
    {
        //Normal tweening.
        value = script_execute(tween, step, duration, upper, lower);
    
        //Check if complete.
        if (step &gt; duration)
        {
            step = duration;
            interupt = false;
            done = true;
        }
    }
    else
    {
        //Interupt tweening.
        value = script_execute(tween, step, interupt_duration, interupt_upper, interupt_lower);
        
        //Check if complete.
        if (step &gt; interupt_duration)
        {
            step = duration;
            interupt = false;
            done = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
