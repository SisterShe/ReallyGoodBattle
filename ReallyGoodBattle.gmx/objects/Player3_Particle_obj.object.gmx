<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Player3_Particle_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = random_range(.25,2.5); 
image_yscale = random_range(.25,2.5);
hspd = random_range(-20,20); 
vspd = random_range(-20,20);  
image_blend = make_color_rgb(GameMaster_obj.Player3Red,GameMaster_obj.Player3Green,GameMaster_obj.Player3Blue);
if (instance_exists(Player3_obj)){
    image_angle = Player3_obj.image_angle; 
} else {
    image_angle = choose(0,90,270,180);
}
image_alpha = 1 
decay = image_yscale;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision_Script(); 
image_alpha = decay;
image_yscale = decay;
decay = decay/1.05; 

if (image_angle = 0){
    hspd = hspd/1.3;
    if (place_meeting(x, y+1, CollisionUnit_obj)) {
        vspd = 0;
    } else {
        vspd = vspd+0.25;
    }
}
if (image_angle = 90){
    vspd = vspd/1.3;
    if (place_meeting(x+1, y, CollisionUnit_obj)) {
        hspd = 0;
    } else {
        hspd = hspd+0.25;
    }
}
if (image_angle = 180){
    hspd = hspd/1.3;
    if (place_meeting(x, y-1, CollisionUnit_obj)) {
        vspd = 0;
    } else {
        vspd = vspd-0.25;
    }
}
if (image_angle = 270){
    vspd = vspd/1.3;
    if (place_meeting(x-1, y, CollisionUnit_obj)) {
        hspd = 0;
    } else {
        hspd = hspd-0.25;
    }
}
if (decay &lt;= 0) {
    instance_destroy(); 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
