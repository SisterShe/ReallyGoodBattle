<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slider_bar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_widget_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Code

//Parent Inheritance
event_inherited();

//Data Variables
script = noone;
lower = noone;
upper = noone;
value = noone;
constant = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroys Wheel
with (wheel)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Wheel Movement.

//Parent Inheritance
event_inherited();

//Checks if disabled or hidden.
if (disabled or hidden) exit;

//Checks if parent is disabled or hidden.
if (view.disabled or view.hidden) exit;

//Check if left pressed on self.
if (highlight_boolean() and input_check_pressed(0, mb_left) and mouse_enabled)
{
    //Check if within limits of bar.
    if (mouse_x &gt; leftLimit) and (mouse_x &lt; rightLimit)
    {
        //Updates wheel position.
        wheel.x = mouse_x;
    }
}

//Updates wheel with selection.
wheel.selected = selected;
wheel.mouse_enabled = mouse_enabled;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delayed Creation Code

//Instance Variables
var margin = 10;
leftLimit = x - (sprite_width / 2) + (image_xscale * margin);
rightLimit = x + (sprite_width / 2) - (image_xscale * margin);

//Wheel Variables
wheel = instance_create(x, yy, obj_slider_wheel);
with (wheel)
{
    depth = other.depth - 1;
    view = other.view;
    xx = other.xx;
    yy = other.yy;
    slider = other.id;
    length = other.sprite_width;
    leftLimit = other.leftLimit;
    rightLimit = other.rightLimit;
    lower = other.lower;
    upper = other.upper;
    value = other.value;
    script = other.script;
    constant = other.constant;
}

//Updates initial wheel position.
var width = rightLimit - leftLimit;
var percentage = (value - lower) / (upper - lower);
wheel.x = leftLimit + (width * percentage);

//Adds widget to view.
ds_list_add(view.widgets, wheel);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
